{"question": "Which of the following styles of fuzzer is more likely to explore paths covering every line of code in the following program?", "choices": [{"label": "A", "text": "Generational"}, {"label": "B", "text": "Blackbox"}, {"label": "C", "text": "Whitebox"}, {"label": "D", "text": "Mutation-based"}], "answerKey": "C", "model_answer": "LECTURE: Fuzzing is a software testing technique that involves providing invalid or unexpected data to a program and observing its response. A fuzzer is a tool that applies fuzzing to a program.\nA fuzzer can use one of the following styles to generate data to provide to a program:\nGenerational. A generational fuzzer starts with a simple set of input data and gradually modifies it, creating new tests as it goes.\nMutation-based. A mutation-based fuzzer randomly modifies the characters in the input data.\nComparison-based. A comparison-based fuzzer compares the input data to a set of expected data and generates new tests by making small changes to the input data.\nA fuzzer can also use one of the following modes to control the testing process:\nBlackbox. A blackbox fuzzer sends the input data directly to the program's input.\nWhitebox. A whitebox fuzzer uses information about the program's internal structure to guide the fuzzing process."}
{"question": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replaying bytes that a client sent earlier.\n2. An attacker impersonating the server.", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "A", "model_answer": ""}
{"question": "MIT\u2019s Kerberos KDC server has a maximum ticket lifetime of 24 hours (for most user principals). What ensures that an expired Kerberos ticket can no longer be used?", "choices": [{"label": "A", "text": "The Kerberos server (KDC) refuses to establish new connections between clients and servers for expired tickets."}, {"label": "B", "text": "When a client connects to a server, the server sets a 24-hour timer to terminate the connection, which ensures a client cannot remain connected past the ticket\u2019s maximum lifetime."}, {"label": "C", "text": "When a client connects to a server, the server compares the ticket\u2019s expiration time to the server\u2019s current clock, and refuses to authenticate the user if the ticket expiration time is in the past."}, {"label": "D", "text": "When a client connects to a server, the server sends a query to the KDC to check if the ticket is still valid with respect to the KDC\u2019s clock, and refuses to authenticate the user if the KDC reports that the ticket is expired."}], "answerKey": "C", "model_answer": ""}
{"question": "In Message Condentiality, the transmitted message must make sense to only intended", "choices": [{"label": "A", "text": "Receiver"}, {"label": "B", "text": "Sender"}, {"label": "C", "text": "Modulor"}, {"label": "D", "text": "Translator"}], "answerKey": "A", "model_answer": ""}
{"question": "Which of the following is a remote Trojan?", "choices": [{"label": "A", "text": "Troya"}, {"label": "B", "text": "DaCryptic"}, {"label": "C", "text": "BankerA"}, {"label": "D", "text": "Game-Troj"}], "answerKey": "A", "model_answer": ""}
{"question": "______________ is a widespread app\u2019s coding mistake made by developers which could be exploited by an attacker for gaining access or malfunctioning your system.", "choices": [{"label": "A", "text": "Memory leakage"}, {"label": "B", "text": "Buffer-overrun"}, {"label": "C", "text": "Less processing power"}, {"label": "D", "text": "Inefficient programming"}], "answerKey": "B", "model_answer": "LECTURE: Software does not have a built-in way to fix mistakes, such as forgetting to free memory that was allocated. These kinds of mistakes can cause a widespread app to become unstable or to malfunction.\nA buffer overflow occurs when too much data is written to a buffer.\nA buffer overflow can be triggered by numerous events, such as a user entering too much data in a form.\nA buffer overflow can be exploited by an attacker to inject malicious code.\nA memory leak occurs when memory is allocated but not freed.\nA memory leak can happen when a programmer forgets to free memory.\nA memory leak can cause a widespread app to become unstable or to malfunction.\nInefficient programming happens when a widespread app does not use resources efficiently.\nAn inefficiently programmed widespread app can use too much memory or processing power."}
{"question": "Consider the paper Native Client: A Sandbox for Portable, Untrusted x86 Native Code by Yee et al. Ben Bitdiddle notes that NaCl uses Intel x86 segmentation to ensure that the sandboxed module does not read or write memory outside its own data area, and does not execute instructions outside its own code. Ben thinks that with these restrictions alone, executing the sandboxed module must be safe; that is, he thinks validation is not needed. Ben is wrong. Circle the types of x86 machine instructions that the validator always forbids in sandboxed code. Please ignore trampoline and springboard code.", "choices": [{"label": "A", "text": "all instructions that modify segment state"}, {"label": "B", "text": "all loads or stores to addresses that are not 0 mod 32"}, {"label": "C", "text": "all indirect loads or stores (via an address in a register or variable)"}, {"label": "D", "text": "all indirect jumps (via an address in a register or variable)"}], "answerKey": "A", "model_answer": ""}
{"question": "____________ is also a part of darknet that is employed for transferring files anonymously.", "choices": [{"label": "A", "text": "Freenet"}, {"label": "B", "text": "ARPANET"}, {"label": "C", "text": "Stuxnet"}, {"label": "D", "text": "Internet"}], "answerKey": "A", "model_answer": ""}
{"question": "Why apps developed in languages like C, C++ is prone to Buffer-overflow?", "choices": [{"label": "A", "text": "No string boundary checks in predefined functions"}, {"label": "B", "text": "No storage check in the external memory"}, {"label": "C", "text": "No processing power check"}, {"label": "D", "text": "No database check"}], "answerKey": "A", "model_answer": ""}
{"question": "Man in the middle attack can endanger the security of Diffie Hellman method if two parties are not", "choices": [{"label": "A", "text": "Joined"}, {"label": "B", "text": "Authenticated"}, {"label": "C", "text": "Submitted"}, {"label": "D", "text": "Shared"}], "answerKey": "B", "model_answer": ""}
{"question": "An integer overflow occurs when", "choices": [{"label": "A", "text": "an integer expression's result \"wraps around\"; instead of creating a very large number, a very small (or negative) number ends up getting created"}, {"label": "B", "text": "an integer is used as if it was a pointer"}, {"label": "C", "text": "an integer is used to access a buffer outside of the buffer's bounds"}, {"label": "D", "text": "there is no more space to hold integers in the program"}], "answerKey": "D", "model_answer": ""}
{"question": "Let HH be a Merkle-Damgard hash function is H:X^{\\leq L} \\to TH:X^\u2264L  \u2192T. Construct a MAC from this HH as follows: \\ \\ S(k,m) = H(k \\| m)  S(k,m)=H(k\u2225m). This mac is insecure because:", "choices": [{"label": "A", "text": "Given H(k \\| m)H(k\u2225m) anyone can compute H(w \\| k \\| m \\| \\text{PB})H(w\u2225k\u2225m\u2225PB) for any ww"}, {"label": "B", "text": "Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| w)H(k\u2225m\u2225w) for any ww"}, {"label": "C", "text": "Given H(k \\| m)H(k\u2225m) anyone can compute H(k \\| m \\| \\text{PB} \\| w)H(k\u2225m\u2225PB\u2225w) for any ww"}, {"label": "D", "text": "Anyone can compute H( k \\| m )H(k\u2225m) for any mm"}], "answerKey": "C", "model_answer": "LECTURE: A MAC (message authentication code) is a short piece of information that can be used to authenticate a message. A MAC is sent along with a message, and the recipient can use it to confirm the message's authenticity.\nA MAC is created by encrypting a message with a secret key. The sender and recipient of the message share the secret key. This key is used to create and verify the MAC.\nA MAC does not encrypt a message. If a message is altered, the MAC will not match, and the recipient will know that the message has been altered.\nSOLUTION: This MAC is insecure because anyone can compute H(w\u2225k\u2225m\u2225PB)H(w\u2225k\u2225m\u2225PB) for any ww."}
{"question": "Suppose that Alice and Bob sent confidential text messages to one another last month through an encrypted messaging system. Alice and Bob are worried that an adversary might compromise one of their computers today, while they are taking the 6.858 final exam, and would then be able to decrypt those messages. Which of the following security properties can address Alice and Bob\u2019s concern?", "choices": [{"label": "A", "text": "Authentication."}, {"label": "B", "text": "Deniability."}, {"label": "C", "text": "Forward secrecy"}, {"label": "D", "text": "Backward secrecy."}], "answerKey": "C", "model_answer": "LECTURE: Security properties are characteristics that a system or protocol has that protect it from attack. When you are evaluating whether a system or protocol is secure, you need to consider its security properties.\nAuthentication: This property ensures that a user is who they claim to be. This is important to prevent an attacker from impersonating one user to another.\nDeniability: This property ensures that a user can deny having performed a specific action. This is often useful to prevent users from being held accountable for actions performed by an attacker who has compromised the user's system.\nForward secrecy: This property ensures that a compromise of a user's long-term secret keys does not compromise past sessions. This can be important to prevent an attacker from using a long-term key to decrypt past sessions.\nBackward secrecy: This property ensures that a compromise of a user's long-term secret keys does not compromise future sessions. This can be important to prevent an attacker from using a long-term key to decrypt future sessions."}
{"question": "The AH Protocol provides source authentication and data integrity, but not", "choices": [{"label": "A", "text": "Integrity"}, {"label": "B", "text": "Privacy"}, {"label": "C", "text": "Nonrepudiation"}, {"label": "D", "text": "Both A & C"}], "answerKey": "B", "model_answer": "LECTURE: When data is sent over a network, the sender and receiver need to be sure that no unauthorized people change the data in transit. They also need to be sure that the data is not denied by the sender.\nOne way to achieve this is by using cryptography. Cryptography involves using secret codes to transform data into a secure, unintelligible form. The data can then be transformed back into its original form on the receiving end. This process makes it difficult for an unauthorized person to change the data and for the sender to deny having sent the data.\nSOLUTION: The AH protocol provides source authentication and data integrity but not privacy or nonrepudiation.\nAH stands for Authentication Header. The AH protocol provides a simple way to verify that the sender of a message is who it claims to be. This is called authentication. The AH protocol does not provide a way to keep the contents of a message private.\nThe AH protocol also provides data integrity. This means that the sender can detect if someone changes the data in transit. The AH protocol does not provide a way to keep the contents of a message secret, or private.\nThe AH protocol does not provide nonrepudiation. Nonrepudiation means that the sender of a message cannot later deny having sent the message."}
{"question": "Which of the following is not a security exploit?", "choices": [{"label": "A", "text": "Eavesdropping"}, {"label": "B", "text": "Cross-site scripting"}, {"label": "C", "text": "Authentication"}, {"label": "D", "text": "SQL Injection"}], "answerKey": "C", "model_answer": ""}
{"question": "_______________ is the central node of 802.11 wireless operations.", "choices": [{"label": "A", "text": "WPA"}, {"label": "B", "text": "Access Point"}, {"label": "C", "text": "WAP"}, {"label": "D", "text": "Access Port"}], "answerKey": "B", "model_answer": ""}
{"question": "In MD-5 the length of the message digest is", "choices": [{"label": "A", "text": "160"}, {"label": "B", "text": "128"}, {"label": "C", "text": "64"}, {"label": "D", "text": "54"}], "answerKey": "B", "model_answer": ""}
{"question": "What is Nmap?", "choices": [{"label": "A", "text": "It is a scanner which works by injecting packets to a range of addresses, and inferring what hosts and services might be at those addresses, based on the responses"}, {"label": "B", "text": "It is a network fuzz testing tool"}, {"label": "C", "text": "It is a map of the Internet"}, {"label": "D", "text": "It is a suite of tools for scripting attacks: probe, construct, encode, inject, wait for response"}], "answerKey": "A", "model_answer": ""}
{"question": "How do you prevent SQL injection?", "choices": [{"label": "A", "text": "Escape queries"}, {"label": "B", "text": "Interrupt requests"}, {"label": "C", "text": "Merge tables"}, {"label": "D", "text": "All of the above"}], "answerKey": "A", "model_answer": "LECTURE: To prevent SQL injection, you should exit() or abort() a query that contains user input. The example below shows how to use these commands to prevent SQL injection:\nThe plus sign shows where the user input would go.\nSOLUTION: To prevent SQL injection, you should exit() or abort() a query that contains user input.\nThe SQL code is nested within the queries shown in the example above."}
{"question": "What does it mean to \"be stealthy\" during a penetration test?", "choices": [{"label": "A", "text": "Performing the tests from an undisclosed location"}, {"label": "B", "text": "Using encryption during tests to make the source of attacks impossible to determine"}, {"label": "C", "text": "Performing penetration testing without the target organization knowing"}, {"label": "D", "text": "Taking care to avoid activities during a penetration test that might attract attention, e.g., by operators or IDS services"}], "answerKey": "D", "model_answer": ""}
{"question": "Which of the following is not a transport layer vulnerability?", "choices": [{"label": "A", "text": "Mishandling of undefined, poorly defined variables"}, {"label": "B", "text": "The Vulnerability that allows \u201cfingerprinting\u201d & other enumeration of host information"}, {"label": "C", "text": "Overloading of transport-layer mechanisms"}, {"label": "D", "text": "Unauthorized network access"}], "answerKey": "D", "model_answer": "LECTURE: A transport-layer vulnerability occurs at the protocol level, which is the highest level of the OSI model. Transport-layer vulnerabilities can be exploited by attackers to perform a variety of malicious activities.\nA transport-level attack can gather sensitive information about the targeted host. This type of attack is called an enumeration attack.\nAn attacker can use a transport-level vulnerability to exhaust the server's resources, causing a denial-of-service (DoS) condition.\nA transport-level vulnerability can be used to bypass the firewall and gain access to the internal network."}
{"question": "In Brumley and Boneh\u2019s paper on side-channel attacks, why does blinding prevent the timing attack from working?", "choices": [{"label": "A", "text": "Blinding prevents the server from using the CRT optimization, which is essential to the timing attack."}, {"label": "B", "text": "Blinding changes the p and q primes that are used, so an adversary cannot learn the server\u2019s true p and q values."}, {"label": "C", "text": "Blinding randomizes the ciphertext being decrypted, thus obscuring the correlation between an adversary\u2019s input and the timing differences."}, {"label": "D", "text": "Blinding adds a random amount of time to the decryption due to the multiplication and division by the blinding random value r, which obscures the timing differences used in the attack."}], "answerKey": "C", "model_answer": ""}
{"question": "The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. RS and KM\n2. RS and MR", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "D", "model_answer": "LECTURE: Performance optimizations can significantly speed up software calculations. However, some of these optimizations can also introduce subtle timing side-effects that can be exploited by attackers.\nAn attacker who can observe the timing of certain software events can learn information about the software's internal state. This side-effect can be exploited to launch timing side-channel attacks, which can be used to decipher encrypted data or to discover sensitive information such as passwords.\nTo close a timing channel, you need to turn off the performance optimizations that are causing the timing side-effects."}
{"question": "Public key encryption is advantageous over Symmetric key Cryptography because of", "choices": [{"label": "A", "text": "Speed"}, {"label": "B", "text": "Space"}, {"label": "C", "text": "Key exchange"}, {"label": "D", "text": "Key length"}], "answerKey": "C", "model_answer": "LECTURE: In public key encryption, there are two keys, a public key and a private key. The public key is used for encryption, and the private key is used for decryption.\nThe public key is freely available to anyone who wants it. The private key is kept secret.\nThe advantages of public key encryption include:\nKey exchange is not necessary. In symmetric key encryption, the keys must be exchanged before the data is encrypted.\nThe same key is not used for both encryption and decryption. In symmetric key encryption, the same key is used for both encryption and decryption. This key must be kept secret.\nPublic key encryption can be used for digital signatures. A digital signature is a way to prove that a message really came from a specific person. Digital signatures use public key encryption.\nSOLUTION: Public key encryption is advantageous over symmetric key cryptography because of key exchange. In symmetric key cryptography, the same key is used for both encryption and decryption. This key must be kept secret. But in public key cryptography, there are two keys: a public key and a private key. The public key is used for encryption, and the private key is used for decryption. So, the public key can be freely shared with others."}
{"question": "The __________ was a huge marketplace of Dark Web specifically famous for selling of illegal drugs & narcotics as well as you can find a wide range of other goods for sale.", "choices": [{"label": "A", "text": "Silk Road"}, {"label": "B", "text": "Cotton Road"}, {"label": "C", "text": "Dark Road"}, {"label": "D", "text": "Drug Road"}], "answerKey": "A", "model_answer": "LECTURE: The Dark Web is a part of the internet that is intentionally hidden. To access the Dark Web, special software is needed to encrypt, or cover up, the internet traffic. This makes it more difficult for authorities to trace the activities of the users.\nThe Dark Web contains many marketplaces, or places where people can buy and sell goods and services. One of the most famous Dark Web marketplaces was the Silk Road. It was a large marketplace that was specifically known for selling illegal drugs and narcotics."}
{"question": "The ______________ is categorized as an unknown segment of the Deep Web which has been purposely kept hidden & is inaccessible using standard web browsers.", "choices": [{"label": "A", "text": "Haunted web"}, {"label": "B", "text": "World Wide Web"}, {"label": "C", "text": "Dark web"}, {"label": "D", "text": "Surface web"}], "answerKey": "C", "model_answer": ""}
{"question": "What does EXE do when the STP solver times out on a constraint query for a particular path?", "choices": [{"label": "A", "text": "Assume that the query is satisfiable and continue executing the path."}, {"label": "B", "text": "Assume that the query is not satisfiable and stop executing the path"}, {"label": "C", "text": "Restart STP and retry the query, up to a limited number of retries."}, {"label": "D", "text": "Remove a subset of the constraints and retry the query."}], "answerKey": "B", "model_answer": ""}
{"question": "To verify a digital signature we need the", "choices": [{"label": "A", "text": "Sender\u2019s Private key"}, {"label": "B", "text": "Sender\u2019s Public key"}, {"label": "C", "text": "Receiver\u2019s Private key"}, {"label": "D", "text": "Receiver\u2019s Public key"}], "answerKey": "B", "model_answer": "LECTURE: A digital signature is a piece of information that is sent with an electronic document. It is used to verify that the document has not been altered during transmission.\nA digital signature can be created using the sender\u2019s private key. To verify a digital signature, you can use the sender\u2019s public key."}
{"question": "Suppose you want to use fuzzing on a program to try to find memory errors; which of the following statements is true?", "choices": [{"label": "A", "text": "You should not use a grammar-based fuzzer, because its adherence to the grammar means it will not find memory errors"}, {"label": "B", "text": "Compiling the program with address sanitizer (ASAN) will make errors harder to reproduce"}, {"label": "C", "text": "Compiling the program with address sanitizer (ASAN) will make the source of a memory error easier to find"}, {"label": "D", "text": "Fuzzing doesn't find memory errors, it finds crashes and hangs"}], "answerKey": "C", "model_answer": ""}
{"question": "Based on the paper \u201cSoK: SSL and HTTPS: Revisiting past challenges and evaluating certificates trust model enhancements\u201d, which of the following statements are false?", "choices": [{"label": "A", "text": "Valid DV certificates provide more confidence to a user that she is connecting to the intended party than valid EV certificates."}, {"label": "B", "text": "OCSP stapling allows a server to prove to a browser that its certificate hasn\u2019t been revoked."}, {"label": "C", "text": "DANE makes it difficult for an adversary to launch a SSL stripping attack."}, {"label": "D", "text": "Server key-pinning makes it harder for an adversary to convince a CA to mint a certificate for a site and launch an MITM attack on that site."}], "answerKey": "A", "model_answer": "LECTURE: In the realm of public-key certificates, there are three types of certificates:\n\u2022 DV (Domain Validation) certificates: These certificates are the easiest to obtain. DV certificates allow a server to authenticate its domain name with a certificate authority (CA). DV certificates do not require the server to undergo any independent validation of its identity.\n\u2022 EV (Extended Validation) certificates: These certificates are more difficult to obtain than DV certificates. EV certificates require the server to undergo a more rigorous identity validation process, conducted by the CA. This process typically involves verifying the server\u2019s identity documents, such as its business license or other legal documents. EV certificates allow the server to authenticate its domain name with a high level of confidence.\n\u2022 DANE (Domain-based Authentication and Authorization for Networking) protocol: DANE is a protocol that enables clients to verify the identity of a server using DNS. With DANE, a server can securely bind a public key to its domain name. Clients can then use the public key to verify the server\u2019s identity.\nAn attacker can use SSL stripping to trick a client into thinking that the attacker is the trusted party. SSL stripping involves the attacker intercepting the client-server connection and replacing the server\u2019s SSL certificate with a fake certificate. The attacker\u2019s fake certificate is used to encrypt the communication, and the client is unaware that the attacker has intercepted the connection.\nServer key-pinning is a mechanism that allows a server to specify which certificates it trusts. By pinning its own certificate, a server can prevent a man-in-the-middle (MITM) attack. In a MITM attack, an attacker intercepts the client-server connection and fraudulently presents a certificate to the client. The attacker\u2019s certificate is used to encrypt the communication, and the client is unaware that the attacker has intercepted the connection. Server key-pinning makes it harder for an attacker to convince a CA to mint a certificate for a site and launch an MITM attack on that site.\nOCSP (Online Certificate Status Protocol) is a protocol that allows a client to verify the status of a certificate. A certificate\u2019s status tells the client whether the certificate is still valid. OCSP stapling is a mechanism that allows a server to send the client a certificate status when the client requests the server\u2019s certificate. OCSP stapling allows the client to verify the certificate status without having to contact a CA."}
{"question": "What tool can be used to perform SNMP enumeration?", "choices": [{"label": "A", "text": "DNSlookup"}, {"label": "B", "text": "Whois"}, {"label": "C", "text": "Nslookup"}, {"label": "D", "text": "IP Network Browser"}], "answerKey": "D", "model_answer": ""}
{"question": "Which among them has the strongest wireless security?", "choices": [{"label": "A", "text": "WEP"}, {"label": "B", "text": "WPA"}, {"label": "C", "text": "WPA2"}, {"label": "D", "text": "WPA3"}], "answerKey": "D", "model_answer": "LECTURE: Wireless security protocols are used to protect the data that is transmitted over a wireless network. The two main types of wireless security protocols are defined by the Wi-Fi Alliance, an industry association that promotes the Wi-Fi standard.\nWEP (Wired Equivalent Privacy) is the original wireless security protocol. It was designed to provide a level of security that was equivalent to that of a wired network.\nWEP has some known security weaknesses and is no longer considered secure.\nWPA (Wi-Fi Protected Access) was developed to improve the security of wireless networks. It provides stronger encryption and is considered more secure than WEP.\nWPA2 (Wi-Fi Protected Access 2) is an updated version of WPA. It provides stronger encryption and provides a stronger level of security than WPA.\nWPA3 is a newer version of WPA. It provides stronger encryption and has more security features than WPA2.\nSOLUTION: WPA3 has the strongest wireless security.\nWPA3 is the newest version of WPA. It provides stronger encryption than WPA2."}
{"question": "Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to get a TCP connection to the client web browser.\n2. It would be impossible for okd to run as a non-root user.", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "C", "model_answer": "LECTURE: When a process forks, the two new processes inherit their parent's file descriptors. This means that the two new processes can use the same file descriptors that their parent process was using. This can be useful because a process may have multiple file descriptors open, and using the file descriptors that were inherited from the parent process can avoid the cost of creating new file descriptors.\nBeing able to inherit file descriptors from the parent process is different from being able to pass file descriptors between processes.\nWhen a process passes a file descriptor to another process, the recipient process can use the file descriptor to access the same file that the recipient process was accessed by the sender process. This allows the recipient process to avoid the cost of opening a new file.\nThere is no built-in way to pass file descriptors between processes in Unix. The use of file descriptor passing between processes is not defined by the POSIX standard.\nSome Unix systems provide a way for processes to pass file descriptors between processes. On such a system, the OKWS design would not break.\nThe web server process would be able to get a TCP connection to the client web browser. It would pass the TCP connection to the okd process.\nThe okd process would run as a non-root user.\nOn a Unix system that does not provide a way to pass file descriptors between processes, the OKWS design would break.\nThe web server process would be unable to get a TCP connection to the client web browser. It would not be able to pass the TCP connection to the okd process.\nThe okd process would run as a non-root user."}
{"question": "Failed sessions allow brute-force attacks on access credentials. This type of attacks are done in which layer of the OSI model?", "choices": [{"label": "A", "text": "Physical layer"}, {"label": "B", "text": "Data-link Layer"}, {"label": "C", "text": "Session layer"}, {"label": "D", "text": "Presentation layer"}], "answerKey": "C", "model_answer": "LECTURE: A brute-force attack is an attempt to guess a password or access code. An attacker tries every possible password or code until they find the correct one.\nBrute-force attacks can be done on the physical layer, the data-link layer, the network layer, or the transport layer.\nAt the physical layer, an attacker might try to intercept a wireless signal and try to crack the password from the data that are transmitted.\nAt the data-link layer, an attacker might capture and analyze the data framed between the access point and the device.\nAt the network layer, an attacker might use a computer program to try to guess the password. This type of attack is called a network-layer brute force attack.\nAt the transport layer, an attacker might use a program to try to guess the password after the network layer has provided the device's identity. This type of attack is called a transport-layer brute force attack.\nSOLUTION: A session layer is a layer of the OSI model that establishes, maintains, and terminates connections between applications.\nA session layer can encrypt and authenticate passwords before they are sent across the network. This makes it more difficult for attackers to intercept passwords and use them to log in to a different device.\nA brute-force attack is done at the session layer when an attacker tries to guess a password."}
{"question": "Which of the following is an authentication method?", "choices": [{"label": "A", "text": "Secret question"}, {"label": "B", "text": "Biometric"}, {"label": "C", "text": "SMS code"}, {"label": "D", "text": "All of the above"}], "answerKey": "D", "model_answer": "LECTURE: One of the challenges of computer security is that there are many ways to verify the identity of a user. Authentication is the process of verifying the identity of a user. When you authenticate, you prove that you are who you say you are.\nThere are many different authentication methods. Some authentication methods use something that you know, such as a password. Some authentication methods use something that you have, such as a security token. Some authentication methods use something that you are, such as your fingerprint."}
{"question": "When does a buffer overflow occur, generally speaking?", "choices": [{"label": "A", "text": "when writing to a pointer that has been freed"}, {"label": "B", "text": "when copying a buffer from the stack to the heap"}, {"label": "C", "text": "when a pointer is used to access memory not allocated to it"}, {"label": "D", "text": "when the program notices a buffer has filled up, and so starts to reject requests"}], "answerKey": "C", "model_answer": "LECTURE: In C++, a program may run out of memory and call for help when it tries to write data to a block of memory that has already been freed. This is called a buffer overflow.\nA buffer overflow happens when a pointer is used to access memory not allocated to it. A pointer is a variable that contains an address. When a pointer is dereferenced, it retrieves the data from the address it contains.\nFor example, consider the following code:\nchar buf[17];\nint *p = 0;\n*p = 10;\nThis code will cause a buffer overflow. The pointer p is initially set to 0, which does not point to any allocated memory. Then, the value 10 is copied to the location pointed to by p. This is not allowed, because p is not pointing to any allocated memory."}
{"question": "A digital signature needs a", "choices": [{"label": "A", "text": "Private-key system"}, {"label": "B", "text": "Shared-key system"}, {"label": "C", "text": "Public-key system"}, {"label": "D", "text": "All of them"}], "answerKey": "C", "model_answer": "LECTURE: Digital signatures are used to provide secure, tamper-evident signing of electronic documents. A digital signature is a type of digital signature that uses a private-key and a public-key system.\nA digital signature needs a public-key system. It uses a combination of the signer's private-key and the document to produce a signature. To verify the signature, anyone can use the signer's public-key and the document to confirm that the signature is valid.\nA digital signature does not need a private-key system or a shared-key system."}
{"question": "A packet filter firewall filters at the", "choices": [{"label": "A", "text": "Application or transport"}, {"label": "B", "text": "Data link layer"}, {"label": "C", "text": "Physical Layer"}, {"label": "D", "text": "Network or transport layer"}], "answerKey": "D", "model_answer": ""}
{"question": "Let I = (S,V)I=(S,V) be a MAC. Suppose S(k,m)S(k,m) is always 5 bits long. Can this MAC be secure?", "choices": [{"label": "A", "text": "No, an attacker can simply guess the tag for messages"}, {"label": "B", "text": "It depends on the details of the MAC"}, {"label": "C", "text": "Yes, the attacker cannot generate a valid tag for any message"}, {"label": "D", "text": "Yes, the PRG is pseudorandom"}], "answerKey": "A", "model_answer": ""}
{"question": "Which of the following deals with network intrusion detection and real-time traffic analysis?", "choices": [{"label": "A", "text": "John the Ripper"}, {"label": "B", "text": "L0phtCrack"}, {"label": "C", "text": "Snort"}, {"label": "D", "text": "Nessus"}], "answerKey": "C", "model_answer": "LECTURE: Network security is important for any organization that uses computer networks. Network security is the practice of safeguarding networked devices, including computers, smartphones, and servers, from unauthorized access or attack.\nThere are many ways to protect network security, but the key is to use a combination of different security practices. A well-protected network has:\nStrong passwords that are periodically changed\nFirewalls to block unauthorized access\nAntivirus and antispyware programs to prevent malware from being installed\nIntrusion detection and prevention systems to monitor for and stop attacks\nRegular security updates to fix known vulnerabilities\nA secure network can help prevent data breaches, data loss, and other security incidents.\nSOLUTION: Snort deals with network intrusion detection and real-time traffic analysis.\nSnort is a free and open-source network intrusion detection system that can detect and analyze network traffic. It uses a rule-based language to define what is normal and what is abnormal. When Snort detects an intrusion, it can send an alert to the security team."}
{"question": "The Message condentiality or privacy means that the sender and the receiver expect", "choices": [{"label": "A", "text": "Integrity"}, {"label": "B", "text": "Condentiality"}, {"label": "C", "text": "Authentication"}, {"label": "D", "text": "Nonrepudiation"}], "answerKey": "B", "model_answer": "LECTURE: Message confidentiality or privacy is the assurance that a message will not be intercepted and read by unauthorized people.\nIntegrity is the assurance that a message has not been altered.\nAuthentication is the process of verifying that a message comes from an expected sender.\nNonrepudiation is the assurance that a message cannot be denied by the sender."}
{"question": "When a wireless user authenticates to any AP, both of them go in the course of four-step authentication progression which is called _____________", "choices": [{"label": "A", "text": "AP-handshaking"}, {"label": "B", "text": "4-way handshake"}, {"label": "C", "text": "4-way connection"}, {"label": "D", "text": "wireless handshaking"}], "answerKey": "B", "model_answer": ""}
{"question": "Message authentication is a service beyond", "choices": [{"label": "A", "text": "Message Condentiality"}, {"label": "B", "text": "Message Integrity"}, {"label": "C", "text": "Message Splashing"}, {"label": "D", "text": "Message Sending"}], "answerKey": "B", "model_answer": "LECTURE: When a message is sent, or transmitted, over a communication channel, the receiver needs to know that the message was sent by the expected sender and that the message has not been altered during transmission.\nMessage authentication provides these guarantees.\nMessage authentication involves calculating a digest of the message using a cryptographic hash function, and sending the digest along with the message. The receiver calculates a new digest of the message and compares it to the received digest. If the two digests match, the receiver can be sure that the message was not altered during transmission.\nThere are several cryptographic hash functions in use. A cryptographic hash function takes a variable-size message as input and returns a fixed-size digest. The hash function is designed to be one-way, which means that it is computationally infeasible to re-create the original message from its digest."}
{"question": "Which of the following are most vulnerable to injection attacks?", "choices": [{"label": "A", "text": "Session IDs"}, {"label": "B", "text": "Registry keys"}, {"label": "C", "text": "Network communications"}, {"label": "D", "text": "SQL queries based on user input"}], "answerKey": "D", "model_answer": ""}
{"question": "Assume that a TLS connection has been established successfully between a client and a server. Establishing the session included checking the server certificate and executing a DiffieHelmann exchange, but the client did not provide a client certificate. Further, assume that the client and server are honest, that the client and server don\u2019t leak their keys, and that the cryptography is good. Which of the following attacks does TLS protect against?\n1. An attacker replacing bytes sent by a client with bytes of the attacker\u2019s own choosing.\n2. An attacker reading the plaintext bytes sent by a client.", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "A", "model_answer": ""}
{"question": "Which of the following is a Wireless traffic Sniffing tool?", "choices": [{"label": "A", "text": "Maltego"}, {"label": "B", "text": "BurpSuit"}, {"label": "C", "text": "Nessus"}, {"label": "D", "text": "Wireshark"}], "answerKey": "D", "model_answer": ""}
{"question": "A ___________ is a method in which a computer security mechanism is bypassed untraceable for accessing the computer or its information.", "choices": [{"label": "A", "text": "front-door"}, {"label": "B", "text": "backdoor"}, {"label": "C", "text": "clickjacking"}, {"label": "D", "text": "key-logging"}], "answerKey": "B", "model_answer": ""}
{"question": "Which of the following is not a block cipher operating mode?", "choices": [{"label": "A", "text": "ECB"}, {"label": "B", "text": "CFB"}, {"label": "C", "text": "CBF"}, {"label": "D", "text": "CBC"}], "answerKey": "C", "model_answer": ""}
{"question": "What is a web proxy?", "choices": [{"label": "A", "text": "A piece of software that intercepts and possibly modifies requests (and responses) between a web browser and web server"}, {"label": "B", "text": "An agent that makes decisions on the client's behalf when interacting with web applications"}, {"label": "C", "text": "A piece of software that makes a web application look like a standalone application, making it easier to test"}, {"label": "D", "text": "A simulator for the web, for use when off-line"}], "answerKey": "A", "model_answer": ""}
{"question": "Buffer-overflow may remain as a bug in apps if __________ are not done fully.", "choices": [{"label": "A", "text": "boundary hacks"}, {"label": "B", "text": "memory checks"}, {"label": "C", "text": "boundary checks"}, {"label": "D", "text": "buffer checks"}], "answerKey": "C", "model_answer": ""}
{"question": "Applications developed by programming languages like ____ and ______ have this common buffer-overflow error.", "choices": [{"label": "A", "text": "C, Ruby"}, {"label": "B", "text": "Python, Ruby"}, {"label": "C", "text": "C, C++"}, {"label": "D", "text": "Tcl, C#"}], "answerKey": "C", "model_answer": "LECTURE: Many programming languages have similar features. They can all perform calculations, store data, and make decisions. But some languages are used for specific tasks.\nPython is a popular language for scientific computing and data analysis. It has a simple syntax and many useful built-in functions.\nRuby is a popular language for web development. It has a simple syntax and many useful libraries. Libraries are like prewritten chunks of code that you can use in your own programs.\nC++ is a popular language for developing desktop applications. It is similar to C, but has many additional features.\nC is a popular language for developing operating systems and other systems-level software. It is a more low-level language than the other languages mentioned here.\nTcl is a popular language for developing scripts. A script is a series of commands that can be run by another program. Tcl is often used for testing and for creating custom tools."}
{"question": "Encryption and decryption provide secrecy, or condentiality, but not", "choices": [{"label": "A", "text": "Authentication"}, {"label": "B", "text": "Integrity"}, {"label": "C", "text": "Privacy"}, {"label": "D", "text": "All of the above"}], "answerKey": "B", "model_answer": ""}
{"question": "A/an ___________ is a program that steals your logins & passwords for instant messaging applications.", "choices": [{"label": "A", "text": "IM \u2013 Trojans"}, {"label": "B", "text": "Backdoor Trojans"}, {"label": "C", "text": "Trojan-Downloader"}, {"label": "D", "text": "Ransom Trojan"}], "answerKey": "A", "model_answer": ""}
{"question": "The sub key length at each round of DES is__________", "choices": [{"label": "A", "text": "32"}, {"label": "B", "text": "56"}, {"label": "C", "text": "48"}, {"label": "D", "text": "64"}], "answerKey": "B", "model_answer": "LECTURE: The Data Encryption Standard (DES) is a symmetric-key encryption algorithm. This means that the same key is used for both encryption and decryption.\nA key is a string of bits that is used to encrypt or decrypt data. In DES, the key is 56 bits long.\nTo encrypt data using DES, the key is combined with the data using a formula. This formula is called a permutation. The permutation is followed by a formula for mixing the data. The mixing formula uses the key bits to combine the data with a constant.\nThe mixing formula for DES is:\nC \u2190 C \u2295 (K \u2297 M)\nwhere C is the resulting data, and M is the plaintext. The \u2295 symbol means XOR. The \u2297 symbol means bit-wise exclusive OR.\nThe key is mixed with the plaintext using the mixing formula. This creates a new value, which is then used in the permutation. The permutation puts the data in the right order.\nThe final result is the ciphertext."}
{"question": "Which of the following is true of mutation-based fuzzing?", "choices": [{"label": "A", "text": "It generates each different input by modifying a prior input"}, {"label": "B", "text": "It works by making small mutations to the target program to induce faults"}, {"label": "C", "text": "Each input is mutation that follows a given grammar"}, {"label": "D", "text": "It only makes sense for file-based fuzzing, not network-based fuzzing"}], "answerKey": "A", "model_answer": ""}
{"question": "What are the types of scanning?", "choices": [{"label": "A", "text": "Port, network, and services"}, {"label": "B", "text": "Network, vulnerability, and port "}, {"label": "C", "text": "Passive, active, and interactive"}, {"label": "D", "text": "Server, client, and network"}], "answerKey": "B", "model_answer": "LECTURE: Scanning is the process of examining your system and network for security vulnerabilities. Network, vulnerability, and port are common types of scanning.\nPort scanning is the process of testing a specific port on a target. Port scanning can help identify open ports and the services running on them.\nNetwork scanning is the process of examining the entire network for active hosts and available services.\nActive scanning involves sending packets with a specific data stream to a target. The target responds to the packets, and the scanner analyzes the response to determine the type of service running on the target.\nPassive scanning involves examining the packets that are transmitted by a target. The scanner does not interact with the target, so this type of scanning is less likely to detect vulnerabilities.\nInteractive scanning is a combination of active and passive scanning.\nServer, client, and network scanning focus on the type of system or network component that is being scanned.\nA server is a system that provides services to other systems on a network.\nA client is a system that requests and uses services provided by other systems on a network.\nA network is a group of systems that can communicate with each other."}
{"question": "A sender must not be able to deny sending a message that was sent, is known as", "choices": [{"label": "A", "text": "Message Nonrepudiation"}, {"label": "B", "text": "Message Integrity"}, {"label": "C", "text": "Message Condentiality"}, {"label": "D", "text": "Message Sending"}], "answerKey": "A", "model_answer": ""}
{"question": "A proxy rewall lters at the", "choices": [{"label": "A", "text": "Physical layer"}, {"label": "B", "text": "Application layer"}, {"label": "C", "text": "Data link layer"}, {"label": "D", "text": "Network layer"}], "answerKey": "B", "model_answer": "LECTURE: The internet is a global network of computers that communicate with each other using the Internet Protocol (IP). When a message is sent from one computer to another, the message is divided into packets. Each packet is sent through the internet to the destination computer.\nThe Transport Control Protocol (TCP) is a protocol used to transmit data over the internet. It is responsible for breaking up data into packets, managing the packets, and putting the packets back together into data at the destination computer.\nThe Transmission Control Protocol (TCP) includes the following parts:\nA sender uses the sender's TCP to break up data into packets and to manage the packets as they are sent to the receiver.\nA receiver uses the receiver's TCP to put packets back together into data.\nSOLUTION: A proxy rewall lters at the network layer. It is positioned between the internet and the computers in an internetwork. A proxy rewall is able to read the header of each packet and to choose to pass or block the packet."}
{"question": "Encapsulating Security Payload (ESP) belongs to which Internet Security Protocol?", "choices": [{"label": "A", "text": "Secure Socket Layer Protocol"}, {"label": "B", "text": "Secure IP Protocol"}, {"label": "C", "text": "Secure Http Protocol"}, {"label": "D", "text": "Transport Layer Security Protocol"}], "answerKey": "B", "model_answer": "LECTURE: Internet protocols are a set of rules that govern the format of data that is exchanged over the Internet. Security protocols are a set of rules that help to ensure that data is transmitted safely and securely over the Internet.\nThere are several security protocols that can be used to secure data being transmitted over the Internet. The table below compares some features of these protocols.\nProtocol | How it works | Ports | Supports\nSecure Socket Layer (SSL) | Encrypts all communication between a client and a server. | 443 | Yes\nTransport Layer Security (TLS) | Encrypts all communication between a client and a server. | 443 | Yes\nInternet Protocol Security (IPSec) | Encrypts each IP packet. | Various | Yes\nSecure HTTP (HTTPS) | Encrypts all communication between a client and a server. | 443 | Yes\nSecure IP (IPSec) | Encrypts each IP packet. | Various | Yes"}
{"question": "A special tool is necessary for entering the network which is _______________ that helps the anonymous internet users to access into the Tor\u2019s network and use various Tor services.", "choices": [{"label": "A", "text": "Opera browser"}, {"label": "B", "text": "Firefox"}, {"label": "C", "text": "Chrome"}, {"label": "D", "text": "Tor browser"}], "answerKey": "D", "model_answer": "LECTURE: The advent of the internet has created a need for greater privacy and security for people who use it. In response to this need, the Tor project was developed. Tor stands for The Onion Router, which refers to the method that Tor uses to encrypt internet traffic.\nThe Tor network is a free, global, volunteer-operated network of servers that helps to make internet communication anonymous and secure. Tor's hidden service protocol prevents anyone from learning your location or the types of devices you are using to access the internet. This makes it difficult for internet providers to track your online activities, and it also makes it more difficult for governments to monitor what people are reading and writing on the internet.\nTor can be used to access the internet directly, but it also supports the use of hidden services. Hidden services are websites that are available only over the Tor network. To access a hidden service, you must use a special web browser called the Tor Browser.\nSOLUTION: To access the Tor network, you need a special tool that helps you to connect to the network anonymously. One such tool is the Tor browser."}
{"question": "How does a buffer overflow on the stack facilitate running attacker-injected code?", "choices": [{"label": "A", "text": "By overwriting the return address to point to the location of that code"}, {"label": "B", "text": "By writing directly to the instruction pointer register the address of the code"}, {"label": "C", "text": "By writing directly to %eax the address of the code"}, {"label": "D", "text": "By changing the name of the running executable, stored on the stack"}], "answerKey": "A", "model_answer": ""}
{"question": "The digest created by a hash function is normally called a", "choices": [{"label": "A", "text": "Modication detection code (MDC)"}, {"label": "B", "text": "Modify authentication connection"}, {"label": "C", "text": "Message authentication control"}, {"label": "D", "text": "Message authentication cipher"}], "answerKey": "A", "model_answer": "LECTURE: A hash function is a one-way function that converts a data input to a fixed-size string of characters.\nWhen you use a hash function, the output does not need to be unique for each input, but it must be very unlikely that two inputs will have the same output.\nA hash function is often used to create a message authentication code (MAC). A MAC is a piece of information that can be used to confirm the integrity and authenticity of a message.\nTo create a MAC, you use a hash function and a secret key. The secret key is used to alter the input in a systematic way that makes it very unlikely that any two messages will have the same MAC.\nThe digest created by a hash function is normally called a message authentication code (MAC).\nSOLUTION: The correct answer is D.\nA message authentication cipher is a code that is sent along with a message. The code can be used to confirm the integrity and authenticity of the message.\nA message authentication cipher is created by using a hash function and a secret key. The secret key is used to alter the input in a systematic way that makes it very unlikely that any two messages will have the same code."}
{"question": "Let F: K \\times R \\to MF:K\u00d7R\u2192M be a secure PRF. For m \\in Mm\u2208M define E(k,m) = \\big[ r \\gets R,\\ \\text{output } \\big(r,\\ F(k,r) \\oplus m\\big)\\ \\big]E(k,m)=[r\u2190R, output (r, F(k,r)\u2295m) ] Is EE symantically secure under CPA?", "choices": [{"label": "A", "text": "Yes, whenever F is a secure PRF"}, {"label": "B", "text": "No, there is always a CPA attack on this system"}, {"label": "C", "text": "Yes, but only if R is large enough so r never repeats (w.h.p)"}, {"label": "D", "text": "It depends on what F is used"}], "answerKey": "C", "model_answer": ""}
{"question": "Old operating systems like _______ and NT-based systems have buffer-overflow attack a common vulnerability.", "choices": [{"label": "A", "text": "Windows 7"}, {"label": "B", "text": "Chrome"}, {"label": "C", "text": "IOS12"}, {"label": "D", "text": "UNIX"}], "answerKey": "D", "model_answer": "LECTURE: Buffer-overflow attacks are a common vulnerability in older operating systems. A buffer-overflow attack can occur when too much data is sent to a buffer (a temporary storage area). When a buffer is overflowed, it can overwrite adjacent memory with new data.\nAn attacker can use a buffer-overflow attack to run malicious code on a system. The attacker can use the malicious code to perform actions such as:\nTaking control of the system\nStealing information from the system"}
{"question": "What is a replay attack?", "choices": [{"label": "A", "text": "When the attacker replies to a message sent to it by the system"}, {"label": "B", "text": "An attack that continuously repeats, probing for a weakness"}, {"label": "C", "text": "An attack that uses the system's own messages and so cannot be defended against"}, {"label": "D", "text": "The attacker resends a captured message, and the site accept its and responds in the attacker's favor"}], "answerKey": "D", "model_answer": "LECTURE: A replay attack is a type of attack where the attacker captures network traffic, replays it, and then injects malicious traffic.\nA replay attack can be used to perform any type of network attack, such as injecting malicious traffic, replaying a captcha, or repeating a previous network request.\nA replay attack can be performed by an attacker who is in the middle of the communication link. The attacker captures the network traffic, replays it, and then injects malicious traffic. The site will respond to the attacker's malicious traffic as if it were a legitimate request."}
{"question": "Statement 1| A U2F USB dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off. Statement 2| A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request.", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "C", "model_answer": "LECTURE: A two-factor authentication process requires two different factors to authenticate a user. A common two-factor authentication process involves a user knowing a password and having a separate piece of information, such as a security token.\nTwo-factor authentication is more secure than a one-factor authentication process. With a two-factor authentication process, an attacker who steals a user's password would still not be able to authenticate as that user.\nSOLUTION: Statement 1 is true. A U2F USB dongle is a security token that is used to provide a second factor to a one-factor authentication process. The U2F dongle prevents malware on the user\u2019s computer from stealing the user\u2019s second factor to authenticate as that user even when the user\u2019s computer is turned off.\nStatement 2 is true. A server using U2F can reliably determine that the user who is attempting to login is indeed behind the computer that sent the login request. U2F helps prevent remote attackers from spoofing the user\u2019s computer and authenticating as the user."}
{"question": "____________________ is the anticipation of unauthorized access or break to computers or data by means of wireless networks.", "choices": [{"label": "A", "text": "Wireless access"}, {"label": "B", "text": "Wireless security"}, {"label": "C", "text": "Wired Security"}, {"label": "D", "text": "Wired device apps"}], "answerKey": "B", "model_answer": "LECTURE: Wireless security is the anticipation of unauthorized access or break to computers or data by means of wireless networks. Wireless security is important because wireless networks are easily accessible from multiple sources. It is important to protect your wireless network and the devices connected to it.\nSOLUTION: Wireless security is the anticipation of unauthorized access or break to computers or data by means of wireless networks.\nWireless access is a type of wireless security. It involves using a wireless network to connect to the internet or a different computer network.\nWired Security is an approach to network security that uses cables to connect devices to a network. This type of security is not wireless.\nWired device apps are programs that can be installed on a wired device. These programs are not wireless."}
{"question": "Which of the following are benefits of penetration testing?", "choices": [{"label": "A", "text": "Results are often reproducible"}, {"label": "B", "text": "Full evidence of security: a clean test means a secure system"}, {"label": "C", "text": "Compositionality of security properties means tested components are secure even if others change"}, {"label": "D", "text": "Makes an adversarial neural network converge more quickly"}], "answerKey": "A", "model_answer": ""}
{"question": "1. _________ framework made cracking of vulnerabilities easy like point and click.", "choices": [{"label": "A", "text": ".Net"}, {"label": "B", "text": "Metasploit"}, {"label": "C", "text": "Zeus"}, {"label": "D", "text": "Ettercap"}], "answerKey": "B", "model_answer": ""}
{"question": "You are given a message (m) and its OTP encryption (c). Can you compute the OTP key from m and c ?", "choices": [{"label": "A", "text": "No, I cannot compute the key."}, {"label": "B", "text": "Yes, the key is k = m xor c."}, {"label": "C", "text": "I can only compute half the bits of the key."}, {"label": "D", "text": "Yes, the key is k = m xor m."}], "answerKey": "B", "model_answer": "LECTURE: One-time pad (OTP) is an encryption technique that can be used to send a message over an insecure channel. OTP uses a randomly generated key that is as long as the message. The key is used only once, hence the name one-time pad.\nTo encrypt a message, each letter in the message is replaced with the letter's corresponding digit. If the letter is a digit, its value is used. If the letter is not a digit, its value is the remainder of the letter's value when the value of the letter is used as the divisor.\nFor example, encrypt the message 1940.\nThe key is 1940.\nSo, the encrypted message is 5 8 2.\nTo decrypt the message, the encryption process is simply reversed. Each digit is replaced with its corresponding letter.\nTo decrypt the message 5 8 2, the key is 1940.\nSo, the decrypted message is 1940.\nSOLUTION: To compute the OTP key from m and c, use the formula k = m xor c.\nk is the OTP key.\nm is the message.\nc is the OTP encryption.\nxor is a mathematical operator that performs an exclusive or operation. If one or both of the operands are zero, the result is zero."}
{"question": "The openSSL implementation described in \u201cRemote Timing Attacks are Practical\u201d (by Brumley and Boneh) uses the following performance optimizations: Chinese Remainder (CR), Montgomery Representation (MR), Karatsuba Multiplication (KM), and Repeated squaring and Sliding windows (RS). Which of the following options would close the timing channel attack described in the paper if you turned the listed optimizations off?\n1. CR and MR\n2. CR", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "A", "model_answer": "LECTURE: Performance optimizations can make code run faster, but they can also introduce security vulnerabilities. If an optimization introduces a vulnerability, then the optimization is not a true performance optimization.\nAn example of a non-performance optimization is using a cryptographic algorithm that is not a standard. This is not a true performance optimization, because it does not make the code run faster. Instead, it introduces a security vulnerability.\nAn attacker can exploit some vulnerabilities to steal data or to inject code. Other vulnerabilities can cause a system to hang or to crash."}
{"question": "When the data must arrive at the receiver exactly as they were sent, its called", "choices": [{"label": "A", "text": "Message Condentiality"}, {"label": "B", "text": "Message Integrity"}, {"label": "C", "text": "Message Splashing"}, {"label": "D", "text": "Message Sending"}], "answerKey": "B", "model_answer": "LECTURE: When the data must arrive at the receiver exactly as they were sent, its called message integrity. Data integrity is the accuracy and consistency of data.\nData integrity is maintained by using error-checking mechanisms. When data is sent over a network, these error-checking mechanisms help ensure that the data is received accurately.\nThere are two types of error-checking mechanisms:\nChecksum: A checksum is a sum of all the bytes in a message. The sender adds the checksum to the message and the receiver checks the checksum when the message is received. If the receiver's checksum is different from the checksum in the message, the receiver knows that the message was changed during transmission.\nHash functions: A hash function is a one-way function that converts a message of any size to a fixed-size value. The sender calculates the hash value for the message and sends it with the message. The receiver calculates the hash value for the message and compares it to the hash value that was sent with the message. If the hash values are the same, the receiver knows that the message was not modified during transmission.\nSOLUTION: To ensure message integrity, the sender adds a checksum to the message and the receiver checks the checksum when the message is received."}
{"question": "What is the difference between a direct leak and a side channel?", "choices": [{"label": "A", "text": "A direct leak creates a denial of service by failing to free memory, while a channel frees memory as a side effect"}, {"label": "B", "text": "A direct leak is one that is intentional, rather than by unintentional"}, {"label": "C", "text": "A direct leak comes via the software system's intended interaction mechanism, where as a side channel leak comes from measurements of other system features, like timing, power usage, or space usage"}, {"label": "D", "text": "There is no difference"}], "answerKey": "C", "model_answer": "LECTURE: A memory leak happens when a program fails to free memory that it no longer needs. A program that leaks memory will cause the system to gradually run out of memory.\nA direct leak is a leak that is caused by a programmer's error. A direct leak comes via the software system's intended interaction mechanism.\nA side channel leak is a leak that is caused by unintentional interactions with a running program. For example, a side channel leak may occur when a program inadvertently leaks information to an observer who is monitoring the program's side effects, such as power usage or timing.\nSOLUTION: The text gives the following definition for a side channel: \"A side channel is a way to interact with a running program that is not covered by the program's intended interface.\"\nA direct leak is a leak that is caused by the program's intended interface. A side channel leak is a leak that is caused by unintended interactions.\nSo, a direct leak is a type of direct side channel leak. A side channel leak is a type of indirect side channel leak."}
{"question": "A session symmetric key between two parties is used", "choices": [{"label": "A", "text": "Only once"}, {"label": "B", "text": "Twice"}, {"label": "C", "text": "Multiple times"}, {"label": "D", "text": "Conditions dependant"}], "answerKey": "A", "model_answer": "LECTURE: A session key is a symmetric key that is used to encrypt and decrypt messages. A session key is generated by the two parties during the initial connection process and is used for that session.\nA session key is generated by both parties during the initial connection process.\nEach party generates a random session key and sends it to the other party.\nThe other party uses the received session key to encrypt the first party's initial message, and the first party uses the received session key to decrypt the second party's initial message.\nFrom then on, the session key is used to encrypt and decrypt all messages exchanged during the session.\nWhen a session is complete, the session key is not saved for the next session."}
{"question": "What is a nop sled", "choices": [{"label": "A", "text": "It is an anonymous version of a mop sled"}, {"label": "B", "text": "It is a sequence of nops preceding injected shellcode, useful when the return address is unknown"}, {"label": "C", "text": "It is a method of removing zero bytes from shellcode"}, {"label": "D", "text": "It is another name for a branch instruction at the end of sequence of nops"}], "answerKey": "B", "model_answer": ""}
{"question": "Which Nmap scan is does not completely open a TCP connection?", "choices": [{"label": "A", "text": "SYN stealth scan"}, {"label": "B", "text": "TCP connect"}, {"label": "C", "text": "XMAS tree scan"}, {"label": "D", "text": "ACK scan"}], "answerKey": "A", "model_answer": "LECTURE: Nmap has several scan modes that determine how Nmap interacts with the targets.\nA SYN stealth scan does not complete the TCP handshake. Nmap sends a SYN packet to the target and stops at that point. This minimally intrusive scan can reveal the operating system of the target.\nA TCP connect scan completes the TCP handshake. This type of scan can identify open ports and the services running on those ports.\nAn XMAS tree scan is a type of TCP connect scan that uses a fake FIN packet to make the target think that an established connection is being closed. This can reveal information about the handshake and make it easier to identify open ports.\nAn ACK scan is a type of TCP connect scan that sends an ACK packet to the target after receiving a SYN-ACK packet. This can reveal information about the handshake and make it easier to identify open ports.\nSOLUTION: A SYN stealth scan does not completely open a TCP connection. It only sends a SYN packet to the target and stops at that point."}
{"question": "Based on the paper \u201cClick Trajectories: End-to-End Analysis of the Spam Value Chain\u201d, which of the following statements are true? \u201cSpammers\u201d here refer to operators of various parts of the \u201cspam value chain.\u201d", "choices": [{"label": "A", "text": "Spammers run their spam-advertised web sites on compromised user machines that are part of a botnet."}, {"label": "B", "text": "Spammers need to register domain names in order for their spam-based advertisements to be effective."}, {"label": "C", "text": "There is a high cost for spammers to switch acquiring banks."}, {"label": "D", "text": "B and C"}], "answerKey": "D", "model_answer": "LECTURE: When you read an article or a report, you should make a list of questions that arise while you are reading. These questions should be answered by the text, but if they are not, they will show that important information is missing.\nWhen you write, use the questions to make sure that your writing is clear and complete. You should answer each question in your writing.\nThe spam value chain consists of many different parts. Each part is carried out by a different spammer.\nThe value chain includes:\nSOLUTION: The paper explains each part of the spam value chain. It describes the functions of the parts, but it does not say that spammers need to register domain names.\nThe paper does say that spammers run their spam-advertised web sites on compromised user machines that are part of a botnet. A botnet is a network of computers that are controlled by a spammer.\nSo, the statement A is true.\nThe paper does not say that there is a high cost for spammers to switch acquiring banks. An acquiring bank is a bank that processes transactions for a spammer.\nSo, the statement C is not true."}
{"question": "In a _____________ attack, the extra data that holds some specific instructions in the memory for actions is projected by a cyber-criminal or penetration tester to crack the system.", "choices": [{"label": "A", "text": "Phishing"}, {"label": "B", "text": "MiTM"}, {"label": "C", "text": "Buffer-overflow"}, {"label": "D", "text": "Clickjacking"}], "answerKey": "C", "model_answer": ""}
{"question": "_______________ is a popular tool used for network analysis in multiprotocol diverse network.", "choices": [{"label": "A", "text": "Snort"}, {"label": "B", "text": "SuperScan"}, {"label": "C", "text": "Burp Suit"}, {"label": "D", "text": "EtterPeak"}], "answerKey": "D", "model_answer": "LECTURE: Network analysis tools are used to diagnose and troubleshoot network problems. These tools can be used to identify bottlenecks, track down network problems, and find out what is happening on the network.\nThere are many different network analysis tools available. Here are some of the most popular ones:\nSnort is a network analysis tool that can be used to detect packet sniffing, banner grabbing, and other attacks. It is particularly useful for detecting security problems on network ports.\nSuperScan is a network analysis tool that can be used to detect open ports and services. It can also be used to determine the operating systems and versions of computers on a network.\nBurp Suit is a network analysis tool that can be used to intercept and modify web transactions. It is particularly useful for testing web applications for security problems.\nEtterPeek is a network analysis tool that can be used to analyze and troubleshoot network protocols. It can be used to identify and diagnose problems with network protocols, such as SOLUTION: SuperScan is a popular tool used for network analysis in multiprotocol diverse networks."}
{"question": "___________________ is alike as that of Access Point (AP) from 802.11, & the mobile operators uses it for offering signal coverage.", "choices": [{"label": "A", "text": "Base Signal Station"}, {"label": "B", "text": "Base Transmitter Station"}, {"label": "C", "text": "Base Transceiver Station"}, {"label": "D", "text": "Transceiver Station"}], "answerKey": "C", "model_answer": "LECTURE: A base station is a device that enables wireless communication between a mobile device and a wired network. A base station connects to the wired network and uses wireless communication to connect devices to the network.\nA base station has the following components:\nA transceiver, which sends and receives signals over the air.\nA baseband processor, which performs baseband functions, such as demodulation and modulation.\nA host processor, which handles tasks, such as data processing and administration.\nA base station can be designed to use a specific type of wireless communication. For example, a base station can be designed to use 3G, 4G, or 5G.\nSOLUTION: A transceiver station is a base station that uses transceivers to send and receive signals over the air. A mobile operator uses a transceiver station for offering signal coverage."}
{"question": "A __________ is a sequential segment of the memory location that is allocated for containing some data such as a character string or an array of integers.", "choices": [{"label": "A", "text": "stack"}, {"label": "B", "text": "queue"}, {"label": "C", "text": "external storage"}, {"label": "D", "text": "buffer"}], "answerKey": "D", "model_answer": ""}
{"question": "Which form of encryption does WPA use?", "choices": [{"label": "A", "text": "Shared key"}, {"label": "B", "text": "LEAP"}, {"label": "C", "text": "TKIP"}, {"label": "D", "text": "AES"}], "answerKey": "C", "model_answer": "LECTURE: Wireless networks use encryption to protect the information that is transmitted over the network. Encryption is the process of converting plain text\u2014data that is sent over the network as unencrypted text\u2014into encrypted text, which cannot be read by unauthorized access points or devices.\nWPA is a security protocol used to protect wireless networks. It creates a secure connection between your wireless device and your wireless network.\nWPA uses the Advanced Encryption Standard (AES) to encrypt data. AES is a strong encryption standard that is used by the U.S. government to protect classified information."}
{"question": "Let suppose a search box of an application can take at most 200 words, and you\u2019ve inserted more than that and pressed the search button; the system crashes. Usually this is because of limited __________", "choices": [{"label": "A", "text": "buffer"}, {"label": "B", "text": "external storage"}, {"label": "C", "text": "processing power"}, {"label": "D", "text": "local storage"}], "answerKey": "A", "model_answer": "LECTURE: The computer has a number of parts. One of the parts is called memory. Memory is used to store data that is not being used at the moment.\nWhen you write a paper, you may have a lot of information to keep track of. You might have to look up facts and figures, or you might be thinking about your next step. You can use memory to store all of that information while you're working on the paper.\nThe computer's memory is a bit like a desk drawer. You can put information into memory and then access it later.\nWhen you're using a search application, you enter a search query. The query is a phrase that tells the application what you're looking for.\nThe search application needs a place to store your query. It places your query into a temporary space called buffer.\nA buffer is a bit like a temporary storage box. The search application can access your query from the buffer. But the buffer is not a permanent place to store your query.\nThe search application searches for information in a database. The database is a large set of data that is organized in a way that makes it easy to search.\nThe search application searches the database for information that matches your query. The search application can be done quickly if your query is a short word or phrase. But if your query is a long word or phrase, the search application may take longer to finish.\nThe search application can only search the data that is in the database. It can't search data that is in external storage.\nExternal storage is a bit like a file cabinet. You can put information into external storage and then access it later.\nWhen you're using a search application, the application can't search information that is in external storage. The search application can only search information that is in the database."}
{"question": "___________________ began to show up few years back on wireless access points as a new way of adding or connecting new devices.", "choices": [{"label": "A", "text": "WPA2"}, {"label": "B", "text": "WPA"}, {"label": "C", "text": "WPS"}, {"label": "D", "text": "WEP"}], "answerKey": "C", "model_answer": ""}
{"question": "What are the port states determined by Nmap?", "choices": [{"label": "A", "text": "Active, inactive, standby"}, {"label": "B", "text": "Open, half-open, closed "}, {"label": "C", "text": "Open, filtered, unfiltered"}, {"label": "D", "text": "Active, closed, unused"}], "answerKey": "C", "model_answer": "LECTURE: Ports are determined by the type of service that is running on the server.\nA port is open if a service is running. An open port is either unfiltered or filtered.\nAn unfiltered port is open to all connections. A filtered port is open to connections from the server's IP address.\nA port is closed if no service is running. A closed port is inactive.\nA port is standby if a service is in the process of starting up. A standby port is open to a limited set of connections.\nA port is inactive if a service was running, but the service has stopped. An inactive port is closed.\nA port is half-open if a connection has been made to a service, but the connection has not yet been fully established. A half-open port is filtered.\nSOLUTION: To determine the ports that are open, you can use the Nmap command-line tool. Nmap determines port status by sending packets to the target computer and analyzing the responses.\nHere is an example of how to use Nmap to determine the open ports on a target computer:"}
{"question": "Which among the following is the least strong security encryption standard?", "choices": [{"label": "A", "text": "WEP"}, {"label": "B", "text": "WPA"}, {"label": "C", "text": "WPA2"}, {"label": "D", "text": "WPA3"}], "answerKey": "A", "model_answer": "LECTURE: Encryption is the process of converting plain text (which can be easily read by others) into cipher text (which is nearly impossible to read). An encryption standard is a set of rules that helps ensure that the cipher text can be converted back into plain text by anyone who has the proper key.\nMost security encryption standards have a system of key management. The key is a string of characters that converts the cipher text back into plain text. The key management system helps ensure that the key is securely delivered to the people who need it.\nA security encryption standard is considered least strong if it is the easiest to break. This can happen if the standard has a short key length, a weak algorithm, or a poor key management system."}
{"question": "Why is it that the compiler does not know the absolute address of a local variable?", "choices": [{"label": "A", "text": "Programs are not allowed to reference memory using absolute addresses"}, {"label": "B", "text": "The size of the address depends on the architecture the program will run on"}, {"label": "C", "text": "As a stack-allocated variable, it could have different addresses depending on when its containing function is called"}, {"label": "D", "text": "Compiler writers are not very good at that sort of thing"}], "answerKey": "C", "model_answer": ""}
{"question": "The stack is memory for storing", "choices": [{"label": "A", "text": "Local variables"}, {"label": "B", "text": "Program code"}, {"label": "C", "text": "Dynamically linked libraries"}, {"label": "D", "text": "Global variables"}], "answerKey": "A", "model_answer": "LECTURE: Each process has its own memory stack. The stack is used for storing temporary data, such as function call addresses and local variables.\nWhen a function is called, the return address and the local variables are stored on the stack. When the function returns, the return address is removed from the stack, and the local variables are destroyed.\nThe stack grows downward in memory. When the stack is full, it is said to be \"overflowed.\" If the stack overflows, the data in the stack is lost.\nSOLUTION: The stack is memory for storing temporary data. This data includes function call addresses and local variables.\nThe stack grows downward in memory. When the stack is full, it is said to be \"overflowed.\" If the stack overflows, the data in the stack is lost."}
{"question": "Can a stream cipher have perfect secrecy?", "choices": [{"label": "A", "text": "Yes, if the PRG is really \u201csecure\u201d"}, {"label": "B", "text": "No, there are no ciphers with perfect secrecy"}, {"label": "C", "text": "Yes, every cipher has perfect secrecy"}, {"label": "D", "text": "No, since the key is shorter than the message"}], "answerKey": "D", "model_answer": ""}
{"question": "Which of the following does authorization aim to accomplish?", "choices": [{"label": "A", "text": "Restrict what operations/data the user can access"}, {"label": "B", "text": "Determine if the user is an attacker"}, {"label": "C", "text": "Flag the user if he/she misbehaves"}, {"label": "D", "text": "Determine who the user is"}], "answerKey": "A", "model_answer": ""}
{"question": "The message must be encrypted at the sender site and decrypted at the", "choices": [{"label": "A", "text": "Sender Site"}, {"label": "B", "text": "Site"}, {"label": "C", "text": "Receiver site"}, {"label": "D", "text": "Conferencing"}], "answerKey": "C", "model_answer": "LECTURE: To send a message, you need to encry t it at the sender's site. This means that the sender uses an encryption key to convert the message into a coded form. The recipient can then decrypt the message at their site by using the same encryption key.\nSOLUTION: The message must be decrypted at the receiver site. This means that the receiver uses a decryption key to convert the coded message into its original form."}
{"question": "A _________________ may be a hidden part of a program, a separate infected program a Trojan in disguise of an executable or code in the firmware of any system\u2019s hardware.", "choices": [{"label": "A", "text": "crypter"}, {"label": "B", "text": "virus"}, {"label": "C", "text": "backdoor"}, {"label": "D", "text": "key-logger"}], "answerKey": "C", "model_answer": ""}
{"question": "How is IP address spoofing detected?", "choices": [{"label": "A", "text": "Installing and configuring a IDS that can read the IP header"}, {"label": "B", "text": "Comparing the TTL values of the actual and spoofed addresses"}, {"label": "C", "text": "Implementing a firewall to the network"}, {"label": "D", "text": "Identify all TCP sessions that are initiated but does not complete successfully"}], "answerKey": "B", "model_answer": ""}
{"question": "Which of the following is not an example of presentation layer issues?", "choices": [{"label": "A", "text": "Poor handling of unexpected input can lead to the execution of arbitrary instructions"}, {"label": "B", "text": "Unintentional or ill-directed use of superficially supplied input"}, {"label": "C", "text": "Cryptographic flaws in the system may get exploited to evade privacy"}, {"label": "D", "text": "Weak or non-existent authentication mechanisms"}], "answerKey": "D", "model_answer": "LECTURE: Application layer issues are related to the interaction between the application and the user.\nPresentation layer issues are related to the formatting of the data that is sent between the application and the user.\nIt is possible to use data formatting to hide the contents of data from the user. For example, a program that processes data in a specific format might interpret a message that is intended to be secret as plain text.\nAn attacker who is able to change the data format can then read the secret data."}
{"question": "Suppose Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec. What aspects of the OKWS design would break without file descriptor passing?\n1. It would be impossible for services to send messages to oklogd.\n2. It would be impossible for services to get a TCP connection to a database proxy.", "choices": [{"label": "A", "text": "True, True"}, {"label": "B", "text": "False, False"}, {"label": "C", "text": "True, False"}, {"label": "D", "text": "False, True"}], "answerKey": "B", "model_answer": "LECTURE: A file descriptor is an integer that refers to a stream of data, such as a terminal session or a file. In Unix, programs can read and write data from files using file descriptors.\nA process has a set of file descriptors that are inherited from the parent process. After a process forks, the new process and the parent process have their own copy of the file descriptors.\nA file descriptor can be closed, but an open file descriptor cannot be destroyed.\nWhen a process executes a system call, the system call is passed the process's set of open file descriptors. This allows the system call to access the correct input and output files.\nIf a process does not have a file descriptor open, the process cannot access the file.\nIf Unix did not provide a way of passing file descriptors between processes, but still allowed inheriting file descriptors from a parent on fork and exec, it would break the following aspects of the OKWS design:\nIt would be impossible for services to send messages to oklogd.\nIt would be impossible for services to get a TCP connection to a database proxy."}
{"question": "Why would a ping sweep be used?", "choices": [{"label": "A", "text": "To identify live systems"}, {"label": "B", "text": "To locate live systems"}, {"label": "C", "text": "To identify open ports"}, {"label": "D", "text": "To locate firewalls"}], "answerKey": "A", "model_answer": "LECTURE: A ping is a utility used to test whether a particular network path is up. It works by sending a packet to the specified IP address and waiting for a response. A ping sweep is a process that involves sending a ping to many different IP addresses.\nA ping sweep can be used to identify live systems by detecting the responses to the pings. A ping sweep can also be used to locate firewalls by seeing which systems do not respond to the pings.\nPing sweeps can be used to identify open ports by noting which systems have sent packets to open ports. This information can be used to identify systems that may be vulnerable to attack."}
{"question": "The four Primary Security Principles related to messages are", "choices": [{"label": "A", "text": "Confidentiality, Integrity, Non repudiation and Authentication"}, {"label": "B", "text": "Confidentiality, Access Control, Integrity, Non repudiation"}, {"label": "C", "text": "Authentication, Authorization, Availability, Integrity"}, {"label": "D", "text": "Availability, Authorization, Confidentiality, Integrity"}], "answerKey": "A", "model_answer": "LECTURE: Security is the process of protecting electronic communication from unauthorized use or alteration. The primary security principles are confidentiality, integrity, authentication, and non-repudiation.\nConfidentiality ensures that only authorized individuals can access the information.\nIntegrity ensures that the information is not altered during transmission.\nAuthentication ensures that the sender of the information is verified.\nNon-repudiation ensures that the sender cannot deny having sent the information.\nThese principles help to secure the information and ensure the reliability and trustworthiness of the information.\nSOLUTION: The first set of Primary Security Principles related to messages is the correct answer. The other sets of principles include additional topics, but they are not primary."}
{"question": "What was the first buffer overflow attack?", "choices": [{"label": "A", "text": "Love Bug"}, {"label": "B", "text": "SQL Slammer"}, {"label": "C", "text": "Morris Worm"}, {"label": "D", "text": "Code Red"}], "answerKey": "C", "model_answer": ""}
{"question": "The ______________ can cost you money, by sending text messages from your mobile phone numbers.", "choices": [{"label": "A", "text": "IM \u2013 Trojans"}, {"label": "B", "text": "Backdoor Trojans"}, {"label": "C", "text": "SMS Trojan"}, {"label": "D", "text": "Ransom Trojan"}], "answerKey": "C", "model_answer": ""}
{"question": "Three of the following are classic security properties; which one is not?", "choices": [{"label": "A", "text": "Confidentiality"}, {"label": "B", "text": "Availability"}, {"label": "C", "text": "Correctness"}, {"label": "D", "text": "Integrity"}], "answerKey": "B", "model_answer": "LECTURE: Security is the protection of information systems and data from unauthorized access, use, disclosure, disruption, modification, or destruction.\nThe classic security properties provide a foundation for understanding the goals of security.\nConfidentiality: Ensuring that information is not disclosed to unauthorized individuals or processes.\nIntegrity: Ensuring that information is not modified or destroyed accidentally or by unauthorized individuals or processes.\nAvailability: Ensuring that authorized individuals have access to information and systems when needed."}
